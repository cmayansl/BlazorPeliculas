@*<h3>ListadoPeliculas</h3>*@

@if (Peliculas == null)
{

    @if (Cargando == null)
    {
        <text>Cargando....</text>
    }
    else
    {
        @Cargando
    }
}
else if (Peliculas.Count == 0)
{

    @if (NoHayRegistros == null)
    {
        <text>No hay registros para mostrar.</text>
    }
    else
    {
        @NoHayRegistros
    }
}
else
{
    @*<input type="checkbox" @onchange="MostrarOcultarBotones" />*@
    //Data binding - permite sincronizar una variable con
    //elementos html o componentes
    <input type="checkbox" @bind="MostrarBotones" />

    @foreach (var pelicula in Peliculas)
    {
        <PeliculaIndividual Pelicula="pelicula" EliminarPelicula="EliminarPelicula"
                            MostrarBoton="MostrarBotones" />
    }
}
@code {
    [Parameter] public List<Pelicula> Peliculas { get; set; }

    // RenderFragment
    [Parameter] public RenderFragment Cargando { get; set; }
    [Parameter] public RenderFragment NoHayRegistros { get; set; }

    bool MostrarBotones = false;

    //protected override async Task OnInitializedAsync()
    //{
    //    //await Task.Delay(3000);
    //    Peliculas = ObtenerPeliculas();
    //}
    //private void MostrarOcultarBotones()
    //{
    //    MostrarBotones = !MostrarBotones;
    //}

    // Sin parametro
    //void EliminarPelicula()
    //{
    //    Console.WriteLine($"Se ha eliminado la película ");
    //}


    // Con parametro
    void EliminarPelicula(Pelicula peli)
    {
        Peliculas.Remove(peli);
        Console.WriteLine($"Se ha eliminado la película {peli.Titulo}");
    }

}
