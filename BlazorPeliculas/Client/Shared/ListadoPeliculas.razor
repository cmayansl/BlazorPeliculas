@inject IJSRuntime js

    <input type="checkbox" @bind="MostrarBotones" />
    <ListadoGenerico Listado="Peliculas">
        @*context está el elemto que se pasa a hayRegistro,
           renombramos "Context con pelicula. para clarificar lo que se está pasando *@
        <HayRegistro Context="pelicula">
            <PeliculaIndividual Pelicula="pelicula" EliminarPelicula="EliminarPelicula"
                                MostrarBoton="MostrarBotones" />
        </HayRegistro>
       
    </ListadoGenerico>


@code {
    [Parameter] public List<Pelicula> Peliculas { get; set; }

    protected override void OnInitialized()
    {
        Console.WriteLine($"OnInitialized: Película {Peliculas.Count}");
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet: Película {Peliculas.Count}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"OnAfterRender: primera renderización {firstRender}");
    }

    protected override bool ShouldRender()
    {
        Console.WriteLine("ShouldRender");
        return  true;
    }

    bool MostrarBotones = false;

    //protected override async Task OnInitializedAsync()
    //{
    //    //await Task.Delay(3000);
    //    Peliculas = ObtenerPeliculas();
    //}
    //private void MostrarOcultarBotones()
    //{
    //    MostrarBotones = !MostrarBotones;
    //}

    // Sin parametro
    //void EliminarPelicula()
    //{
    //    Console.WriteLine($"Se ha eliminado la película ");
    //}


    // Con parametro
    async Task EliminarPelicula(Pelicula peli)
    {
        var confirmado = await js.InvokeAsync<bool>("confirm", $"Desea borrar la película {peli.Titulo}");

        if (confirmado)
        {
            Peliculas.Remove(peli);
            Console.WriteLine($"Se ha eliminado la película {peli.Titulo}");
        }

    }

}
